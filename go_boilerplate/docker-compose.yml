services:
  go_boilerplate:
    container_name: go_boilerplate
    image: go_boilerplate
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:__port__/healthcheck"]
    labels:
      - traefik.http.routers.go_boilerplate.rule=Host(`go_boilerplate.example.com`)
      - traefik.http.routers.go_boilerplate.entrypoints=web,websecure
      - traefik.http.routers.go_boilerplate.service=go_boilerplate
      - traefik.http.services.go_boilerplate.loadbalancer.server.port=__port__
      - traefik.http.routers.go_boilerplate.tls=true
      - traefik.http.routers.go_boilerplate.tls.certresolver=le
      - traefik.http.middlewares.forwardedheaders.headers.customrequestheaders.X-Forwarded-Proto=https
      - traefik.http.middlewares.forwardedheaders.headers.customrequestheaders.X-Forwarded-For={ip}
      - traefik.http.middlewares.websocket-headers.headers.customrequestheaders.Upgrade=websocket
      - traefik.http.middlewares.websocket-headers.headers.customrequestheaders.Connection=Upgrade
      - traefik.http.routers.go_boilerplate.middlewares=websocket-headers
      - traefik.port=80
    networks:
      - go_boilerplatenet
      - proxy
      - monitoring
    ports:
      - __port__:__port__

networks:
  proxy:
    external: true
  monitoring:
    external: true
  go_boilerplatenet:
    driver: bridge
    external: false

volumes:
  go_boilerplatepgdata:
    driver: local
  go_boilerplatepgconf:
    driver: local
  go_boilerplatepglog:
    driver: local
